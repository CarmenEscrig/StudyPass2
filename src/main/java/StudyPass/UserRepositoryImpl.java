package StudyPass;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

public class UserRepositoryImpl implements IRepository<User>{
    private java.sql.Connection con;
    public UserRepositoryImpl(){
        this.con = SocialNetworkService.getConnection();
    }

    @Override
    public List<User> findAll() throws SQLException {
        List<User> users = new ArrayList<>();

        Statement st = this.con.createStatement();
        ResultSet rs = st.executeQuery("SELECT * FROM users");

        while(rs.next()){
            User u =  bdToEntity(rs);
            users.add(u);
        }
        return users;
    }

    @Override
    public void save(User user) throws SQLException {
        if (user.getId() == -1){
            ResultSet rs;
            PreparedStatement st = null;
            String query = "INSERT INTO users (username, password, progressid) VALUES (?, ?)";
            //Fijáos en Statement.RETURN_GENERATED_KEYS. Permite recuperar el campo ID autogenerado por MySql
            st = con.prepareStatement(query, Statement.RETURN_GENERATED_KEYS);

            st.setString(1, user.getName());
            st.setString(2, user.getLastName());

            st.executeUpdate();

            //Recuperar el id autogenerado
            rs = st.getGeneratedKeys();
            //Este ResultSet solo puede contener un registro: el ID autogenerado

            if (rs.next()){
                //Ahora ya sabemos cuál es el nuevo id del Usuario
                user.setId(rs.getInt(1));
                System.out.println("Autogenerated ID:  " + user.getId());
            }
        }else{
            PreparedStatement st = con.prepareStatement("UPDATE users SET name = ?, lastName = ? WHERE id = ?");
            st.setString(1, user.getName());
            st.setString(2, user.getLastName());
            st.setInt(3, user.getId());

            st.executeUpdate();
        }
    }

    @Override
    public void delete(User entity) throws SQLException {

    }

    @Override
    public User bdToEntity(ResultSet rs) throws SQLException {
        return null;
    }
}
